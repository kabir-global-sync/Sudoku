import numpy as np
import random
def sudokuChooser():
    def sudoku1():
        arr1 = np.array((
            [(8,4,6),(7,3,9),(5,2,1)], #row1-box1
            [(1,7,2),(6,5,8),(3,4,9)], #row1-box2
            [(5,9,3),(1,4,2),(7,6,8)], #row1-box3
            [(9,6,2),(4,8,5),(1,7,3)], #row2-box4
            [(8,3,7),(9,2,1),(4,6,5)], #row2-box5
            [(4,5,1),(3,7,6),(8,2,9)], #row2-box6
            [(2,9,8),(3,5,4),(6,1,7)], #row3-box7
            [(7,1,4),(2,8,6),(5,9,3)], #row3-box8
            [(6,3,5),(9,1,7),(2,8,4)]  #row3-box9
            ))
        return arr1
    def sudoku2():
        arr2 = np.array((
            [(1,7,5),(8,6,2),(4,9,3)], #row1-box1
            [(4,9,6),(3,7,1),(8,5,2)], #row1-box2
            [(3,2,8),(4,9,5),(7,1,6)], #row1-box3
            [(7,1,8),(2,5,4),(9,3,6)], #row2-box4
            [(9,4,3),(1,6,8),(7,2,5)], #row2-box5
            [(5,6,2),(9,3,7),(1,8,4)], #row2-box6
            [(6,2,9),(3,4,1),(5,8,7)], #row3-box7
            [(5,3,4),(2,8,7),(6,1,9)], #row3-box8
            [(8,7,1),(6,5,9),(2,4,3)]  #row3-box9
            ))
        return arr2
    def sudoku3():
        arr3 = np.array((
            [(3,2,9),(6,5,8),(4,1,7)], #row1-box1
            [(5,4,7),(9,1,3),(2,8,6)], #row1-box2
            [(6,1,8),(4,2,7),(9,5,3)], #row1-box3
            [(9,7,3),(5,6,2),(8,4,1)], #row2-box4
            [(1,5,2),(8,7,4),(6,3,9)], #row2-box5
            [(8,4,6),(3,9,1),(2,7,5)], #row2-box6
            [(1,9,4),(7,3,5),(2,8,6)], #row3-box7
            [(3,6,5),(4,2,8),(7,9,1)], #row3-box8
            [(7,8,2),(1,6,9),(5,3,4)]  #row3-box9
            ))
        return arr3
    def sudoku4():
        arr4 = np.array((
            [(5,8,1),(7,9,2),(3,6,4)], #row1-box1
            [(6,7,2),(8,4,3),(5,9,1)], #row1-box2
            [(4,3,9),(6,5,1),(7,8,2)], #row1-box3
            [(4,3,8),(2,5,6),(1,7,9)], #row2-box4
            [(9,5,7),(1,8,4),(3,2,6)], #row2-box5
            [(2,1,6),(9,7,3),(8,4,5)], #row2-box6
            [(8,4,5),(9,1,3),(6,2,7)], #row3-box7
            [(2,1,9),(7,6,8),(4,3,5)], #row3-box8
            [(3,6,7),(5,2,4),(1,9,8)]  #row3-box9
            ))
        return arr4
    
    def sudoku5():
        arr5 = np.array((
            [(4,8,9),(1,6,4),(3,5,7)], #row1-box1
            [(3,1,5),(8,9,7),(2,8,6)], #row1-box2
            [(2,6,7),(3,5,8),(9,1,4)], #row1-box3
            [(8,9,5),(6,2,1),(7,4,3)], #row2-box4
            [(6,3,1),(7,4,8),(5,2,9)], #row2-box5
            [(4,7,2),(5,9,3),(1,8,6)], #row2-box6
            [(9,1,4),(2,7,6),(5,3,8)], #row3-box7
            [(8,7,3),(1,5,4),(9,6,2)], #row3-box8
            [(6,2,5),(8,3,9),(7,4,1)]  #row3-box9
            ))
        return arr5
    def sudoku6():
        arr6 = np.array((
            [(5,3,4),(6,7,2),(1,9,8)], #row1-box1
            [(6,7,8),(1,9,5),(3,4,2)], #row1-box2
            [(9,1,2),(3,4,8),(5,6,7)], #row1-box3
            [(8,5,9),(4,2,6),(7,1,3)], #row2-box4
            [(7,6,1),(8,5,3),(9,2,4)], #row2-box5
            [(4,2,3),(7,9,1),(8,5,6)], #row2-box6
            [(9,6,1),(2,8,7),(3,4,5)], #row3-box7
            [(5,3,7),(4,1,9),(2,8,6)], #row3-box8
            [(2,8,4),(6,3,5),(1,7,8)]  #row3-box9
            ))
        return arr6
    
    
    return random.choice([sudoku1(),sudoku3(),sudoku4(),sudoku2(),sudoku6()])